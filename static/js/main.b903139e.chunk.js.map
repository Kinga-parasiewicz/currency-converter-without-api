{"version":3,"sources":["GlobalStyle.js","Header/styled.js","Header/Header.js","currencies.js","Form/styled.js","Form/Form.js","Result/styled.js","Result/Result.js","Container/styled.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","StyledHeader","styled","header","Title","h1","Header","title","currencies","short","name","rate","StyledForm","form","Fieldset","fieldset","Legend","legend","LabelText","label","Input","input","Select","select","Button","button","Form","calculateResult","useState","currency","setCurrency","amount","setAmount","onSubmit","event","preventDefault","value","onChange","target","placeholder","type","required","step","map","TextBox","div","ResultText","span","SourceAmount","TargetAmount","Result","result","undefined","sourceAmount","toFixed","targetAmount","Container","main","App","setResult","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b903139e.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n    html {\n        box-sizing: border-box;\n        scroll-behavior: smooth;\n    }\n    *, ::after, ::before {\n         box-sizing: inherit;\n    }\n    .body {\n        max-width: 1000px;\n        margin: 0 auto;\n    }\n    #root {\n        font-family: 'Catamaran', sans-serif;\n        min-height: 100vh;\n   \n    }\n`;","import styled from \"styled-components\";\n\nexport const StyledHeader = styled.header`\n    display: block;\n`;\n\nexport const Title = styled.h1`\n    margin: 0 auto;\n    padding-top: 210px;\n    padding-bottom:50px;\n    text-transform: uppercase;\n    text-align: center;\n    font-weight: 400;\n    letter-spacing: 1px;\n    @media(max-width:768px){\n        padding-top:20px;\n    }\n`;","import React from \"react\";\nimport { StyledHeader, Title } from \"./styled\";\n\n export const Header = ({ title }) => (\n    <StyledHeader>\n        <Title>{title}</Title>\n    </StyledHeader>\n);\n","export const currencies = [\n    {\n        short: \"EUR\",\n        name: \"Euro\",\n        rate: 4.4660,\n    },\n    {\n        short: \"GBP\",\n        name: \"Funt brytyjski\",\n        rate: 4.8851,\n    },\n    {\n        short: \"USD\",\n        name: \"Dolar amerykański\",\n        rate: 3.9806,\n    },\n    {\n        short: \"CHF\",\n        name: \"Frank szwajcarski\",\n        rate: 4.1818,\n    },\n];","import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\nmax-width: 500px;\nmargin:0 auto;\n`;\n\nexport const Fieldset = styled.fieldset`\n    padding: 20px;\n    border: 1px solid black;\n    border-radius: 4px;\n    box-shadow: 3px 3px   green;\n   \n`;\n\nexport const Legend = styled.legend`\n    background-color: white;\n    color:green;\n    padding: 10px;\n    border: 1px solid green;\n    border-radius: 4px;\n    font-size: 14px;\n    font-weight: 600;\n    letter-spacing: 1px;\n    text-transform: uppercase;\n`;\n\nexport const LabelText = styled.label`\n    width: 100%;\n    max-width: 600px;\n    display:block;\n    text-align: left;\n    font-size: 16px;\n    letter-spacing: 2px;\n    text-transform: uppercase;\n\n    @media(max-width:768px){\n        margin-top: 15px;\n    }\n`;\n\nexport const Input = styled.input`\n    width: 100%;\n    max-width: 300px;\n    padding: 10px;\n    border: 1px solid black;\n    border-radius: 4px;\n    font-size: 16px;\n    letter-spacing: 1px;\n    text-transform: uppercase;\n    &:required {\n        background-color:#aaa;\n    }\n`;\n\nexport const Select = styled.select`\n    width: 100%;\n    max-width: 300px;\n    padding: 10px;\n    margin-top:10px;\n    margin-left:50px;\n    border: 1px solid black;\n    border-radius: 4px;\n    font-size: 16px;\n    letter-spacing: 1px;\n    text-transform: uppercase;\n\n    @media(max-width:768px){\n        margin-left:0px;\n    }\n`;\n\nexport const Button = styled.button`\n    margin: 10px auto;\n    display: flex;\n    justify-content: center;\n    padding: 10px;\n    border: 1px solid;\n    border-radius: 4px;\n    background-color: white;\n    cursor: pointer;\n    font-size: 18px;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n   \n  \n`;","import React, { useState } from \"react\";\nimport { currencies } from \"./../currencies\";\nimport {\n  Fieldset,\n  Legend,\n  LabelText,\n  Input,\n  Select,\n  Button,\n  StyledForm,\n} from \"./styled\";\n\nexport const Form = ({ calculateResult }) => {\n  const [currency, setCurrency] = useState(currencies[0].short);\n  const [amount, setAmount] = useState(\"\");\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    calculateResult(currency, amount);\n  };\n\n  return (\n    <StyledForm onSubmit={onSubmit}>\n      <Fieldset>\n        <Legend>Uzupełnij dane</Legend>\n        <LabelText>\n          Kwota w zł*:\n          <Input\n            value={amount}\n            onChange={({ target }) => setAmount(target.value)}\n            placeholder=\"Podaj kwotę w zł\"\n            type=\"number\"\n            required\n            step=\"0.01\"\n          />\n        </LabelText>\n        <LabelText>\n          Waluta:\n          <Select\n            value={currency}\n            onChange={({ target }) => setCurrency(target.value)}\n          >\n            {currencies.map((currency) => (\n              <option key={currency.short} value={currency.short}>\n                {currency.name}\n              </option>\n            ))}\n          </Select>\n        </LabelText>\n        <Button>Przelicz</Button>\n      </Fieldset>\n    </StyledForm>\n  );\n};\n","\nimport styled from \"styled-components\";\n\nexport const TextBox = styled.div`\n    padding: 10px;\n    background-color:white;\n    border: 1px solid black;\n    border-radius: 4px;\n    box-shadow: 1px 1px black;\n    text-align: center;\n    max-width:500px;\n    margin:0 auto;\n`;\n\nexport const ResultText = styled.span`\n    display: block;\n    text-align: center;\n    font-size: 20px;\n    font-weight: 500;\n    letter-spacing: 1px;\n`;\n\nexport const SourceAmount = styled.span`\n    color: green;\n    font-weight: 600;\n    font-size: 24px;\n    letter-spacing: 1px;\n`;\n\nexport const TargetAmount = styled.span`\n    color:green;\n    font-weight: 800;\n    font-size: 24px;\n    letter-spacing: 1px;\n`;","import React from \"react\";\nimport { TextBox, ResultText, SourceAmount, TargetAmount } from \"./styled\";\n\nexport const Result = ({ result }) => (\n    result !== undefined && (\n        <TextBox>\n            <ResultText>\n                <SourceAmount>\n                    {result.sourceAmount.toFixed(2)}&nbsp;PLN&nbsp;\n                </SourceAmount>\n                    to&nbsp;\n                <TargetAmount>\n                    {result.targetAmount.toFixed(2)}&nbsp;{result.currency}\n                </TargetAmount>\n            </ResultText>\n        </TextBox>\n    )\n);\n","import styled from \"styled-components\";\n\nexport const Container = styled.main`\nbackground:#ddd;\nheight:100vh;\nmargin:0 auto;\n`;","import React, { useState } from \"react\";\nimport { Header } from \"./Header/Header\";\nimport { currencies } from \"./currencies\";\nimport { Form } from \"./Form/Form\";\nimport { Result } from \"./Result/Result\";\nimport { Container } from \"./Container/styled\"\n\nfunction App() {\n  const [result, setResult] = useState();\n  const calculateResult = (currency, amount) => {\n    const rate = currencies.find(({ short }) => short === currency).rate;\n\n    setResult({\n      sourceAmount: +amount,\n      targetAmount: amount / rate,\n      currency,\n    });\n  };\n\n  return (\n    <>\n      <Container>\n      <Header title=\"Kalkulator Walut\" />\n      <Form calculateResult={calculateResult}/>\n      <Result result={result} />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}