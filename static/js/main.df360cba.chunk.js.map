{"version":3,"sources":["GlobalStyle.js","Header/styled.js","Header/Header.js","currencies.js","Clock/styled.js","Clock/Clock.js","Form/styled.js","Form/Form.js","Result/styled.js","Result/Result.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","StyledHeader","styled","header","Title","h1","Header","title","currencies","short","name","rate","StyledClock","p","Clock","useState","Date","date","setDate","formattedDate","toLocaleDateString","undefined","weekday","day","month","year","useEffect","intervalId","setInterval","clearInterval","toLocaleTimeString","StyledForm","form","Fieldset","fieldset","Legend","legend","LabelText","label","Input","input","Select","select","Button","button","Form","calculateResult","currency","setCurrency","sourceCurrency","setSourceCurrency","amount","setAmount","onSubmit","event","preventDefault","value","onChange","target","placeholder","type","required","step","map","TextBox","div","ResultText","span","SourceAmount","TargetAmount","Result","result","sourceAmount","toFixed","targetAmount","Container","main","App","setResult","find","sourceRate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df360cba.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n    html {\n        box-sizing: border-box;\n        scroll-behavior: smooth;\n    }\n    *, ::after, ::before {\n         box-sizing: inherit;\n    }\n    .body {\n        max-width: 1000px;\n        margin: 0 auto;\n    }\n    #root {\n        font-family: 'Catamaran', sans-serif;\n        min-height: 100vh;\n   \n    }\n`;","import styled from \"styled-components\";\n\nexport const StyledHeader = styled.header`\n  display: block;\n`;\n\nexport const Title = styled.h1`\n  margin: 0 auto;\n  padding-top: 210px;\n  padding-bottom: 50px;\n  text-transform: uppercase;\n  text-align: center;\n  font-weight: 400;\n  letter-spacing: 1px;\n  @media (max-width: 768px) {\n    padding-top: 20px;\n  }\n`;\n","import React from \"react\";\nimport { StyledHeader, Title } from \"./styled\";\n\nexport const Header = ({ title }) => (\n  <StyledHeader>\n    <Title>{title}</Title>\n  </StyledHeader>\n);\n","export const currencies = [\n    {\n        short: \"PLN\",\n        name: \"Polski Złoty\",\n        rate: 1.0050,\n    },\n    {\n        short: \"EUR\",\n        name: \"Euro\",\n        rate: 4.4395,\n    },\n    {\n        short: \"GBP\",\n        name: \"Funt brytyjski\",\n        rate: 5.1539,\n    },\n    {\n        short: \"USD\",\n        name: \"Dolar amerykański\",\n        rate: 3.6450,\n    },\n    {\n        short: \"CHF\",\n        name: \"Frank szwajcarski\",\n        rate: 4.0782,\n    },\n];","import styled from \"styled-components\";\n\nexport const StyledClock = styled.p`\n  font-size: 16px;\n  color: green;\n  font-weight: bold;\n  margin-bottom: 20px;\n  text-align:right;\n\n  @media(max-width:768px){\n    text-align:right;\n    font-size:12px;\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport { StyledClock } from \"./styled\";\n\nexport const Clock = () => {\n  const [date, setDate] = useState(new Date());\n  const formattedDate = date.toLocaleDateString(undefined, {\n    weekday: \"long\",\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\",\n  });\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  return (\n    <StyledClock>\n      Dzisiaj jest {formattedDate}, &nbsp;{date.toLocaleTimeString()}\n    </StyledClock>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n  max-width: 500px;\n  margin: 0 auto;\n`;\n\nexport const Fieldset = styled.fieldset`\n  padding: 20px;\n  border: 1px solid black;\n  border-radius: 4px;\n  box-shadow: 3px 3px green;\n`;\n\nexport const Legend = styled.legend`\n  background-color: white;\n  color: green;\n  padding: 10px;\n  border: 1px solid green;\n  border-radius: 4px;\n  font-size: 14px;\n  font-weight: 600;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n`;\n\nexport const LabelText = styled.label`\n  width: 100%;\n  max-width: 600px;\n  display: block;\n  text-align: left;\n  font-size: 16px;\n  letter-spacing: 2px;\n  text-transform: uppercase;\n\n  @media (max-width: 768px) {\n    margin-top: 15px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  max-width: 250px;\n  padding: 10px;\n  margin-left: 20px;\n  border: 1px solid black;\n  border-radius: 4px;\n  font-size: 16px;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n  &:required {\n    background-color: #eee;\n  }\n\n  @media (max-width: 767px) {\n    margin-left: 0px;\n  }\n`;\n\nexport const Select = styled.select`\n  width: 100%;\n  max-width: 250px;\n  padding: 10px;\n  margin-top: 10px;\n  margin-left: 16px;\n  border: 1px solid black;\n  border-radius: 4px;\n  font-size: 16px;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n\n  @media (max-width: 768px) {\n    margin-left: 0px;\n  }\n`;\n\nexport const Button = styled.button`\n  margin: 10px auto;\n  display: flex;\n  justify-content: center;\n  padding: 10px;\n  border: 1px solid green;\n  color: green;\n  border-radius: 4px;\n  background-color: white;\n  cursor: pointer;\n  font-size: 18px;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n`;\n","import React, { useState } from \"react\";\nimport { currencies } from \"./../currencies\";\nimport { Clock } from \"../Clock/Clock\";\nimport {\n  Fieldset,\n  Legend,\n  LabelText,\n  Input,\n  Select,\n  Button,\n  StyledForm,\n} from \"./styled\";\n\nexport const Form = ({ calculateResult }) => {\n  const [currency, setCurrency] = useState(currencies[1].short);\n  const [sourceCurrency, setSourceCurrency] = useState(currencies[0].short);\n  const [amount, setAmount] = useState(\"\");\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    calculateResult(currency, amount, sourceCurrency);\n  };\n\n  return (\n    <StyledForm onSubmit={onSubmit}>\n      <Fieldset>\n        <Legend>Uzupełnij dane</Legend>\n        <Clock />\n        <LabelText>\n          Kwota *:\n          <Input\n            value={amount}\n            onChange={({ target }) => setAmount(target.value)}\n            placeholder=\"Podaj kwotę\"\n            type=\"number\"\n            required\n            step=\"0.01\"\n          />\n        </LabelText>\n        <LabelText>\n          Waluta z :\n          <Select\n            value={sourceCurrency}\n            onChange={({ target }) => setSourceCurrency(target.value)}\n          >\n            {currencies.map((currency) => (\n              <option key={currency.short} value={currency.short}>\n                {currency.name}\n              </option>\n            ))}\n          </Select>\n        </LabelText>\n        <LabelText>\n          Waluta na:\n          <Select\n            value={currency}\n            onChange={({ target }) => setCurrency(target.value)}\n          >\n            {currencies.map((currency) => (\n              <option key={currency.short} value={currency.short}>\n                {currency.name}\n              </option>\n            ))}\n          </Select>\n        </LabelText>\n        <Button>Przelicz</Button>\n      </Fieldset>\n    </StyledForm>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const TextBox = styled.div`\n  padding: 10px;\n  background-color: white;\n  border: 1px solid black;\n  border-radius: 4px;\n  box-shadow: 1px 1px black;\n  text-align: center;\n  max-width: 500px;\n  margin: 0 auto;\n`;\n\nexport const ResultText = styled.span`\n  display: block;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 500;\n  letter-spacing: 1px;\n`;\n\nexport const SourceAmount = styled.span`\n  color: green;\n  font-weight: 600;\n  font-size: 24px;\n  letter-spacing: 1px;\n`;\n\nexport const TargetAmount = styled.span`\n  color: green;\n  font-weight: 800;\n  font-size: 24px;\n  letter-spacing: 1px;\n`;\n","import React from \"react\";\nimport { TextBox, ResultText, SourceAmount, TargetAmount } from \"./styled\";\n\nexport const Result = ({ result }) =>\n  result !== undefined && (\n    <TextBox>\n      <ResultText>\n        <SourceAmount>\n          {result.sourceAmount.toFixed(2)}&nbsp;{result.sourceCurrency}&nbsp;\n        </SourceAmount>\n        to&nbsp;\n        <TargetAmount>\n          {result.targetAmount.toFixed(2)}&nbsp;{result.currency}\n        </TargetAmount>\n      </ResultText>\n    </TextBox>\n  );\n","import styled from \"styled-components\";\n\nexport const Container = styled.main`\n  background: #ddd;\n  height: 100vh;\n  margin: 0 auto;\n`;\n","import React, { useState } from \"react\";\nimport { Header } from \"./Header/Header\";\nimport { currencies } from \"./currencies\";\nimport { Form } from \"./Form/Form\";\nimport { Result } from \"./Result/Result\";\nimport { Container } from \"./Container\";\n\n\nfunction App() {\n  const [result, setResult] = useState();\n  const calculateResult = (currency, amount, sourceCurrency) => {\n    const rate = currencies.find(({ short }) => short === currency).rate;\n    const sourceRate = currencies.find(({ short }) => short === sourceCurrency)\n      .rate;\n\n    setResult({\n      sourceAmount: +amount,\n      targetAmount: (amount * sourceRate) / rate,\n      currency,\n      sourceCurrency,\n    });\n  };\n\n  return (\n    <>\n      <Container>\n        <Header title=\"Kalkulator Walut\" />\n        <Form calculateResult={calculateResult} />\n        <Result result={result} />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}