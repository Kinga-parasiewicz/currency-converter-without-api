{"version":3,"sources":["GlobalStyle.js","Header/styled.js","Header/Header.js","Clock/styled.js","Clock/Clock.js","Clock/useCurrentDate.js","Form/styled.js","Form/Form.js","Result/styled.js","Result/Result.js","Container/index.js","App.js","useRatesApi.js","reportWebVitals.js","index.js","theme.js"],"names":["GlobalStyle","createGlobalStyle","StyledHeader","styled","header","Title","h1","theme","breakpoint","horizontal","Header","title","StyledClock","p","color","green","formatDate","date","toLocaleString","undefined","weekday","day","month","year","hour","minute","second","Clock","useState","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","StyledForm","form","Fieldset","fieldset","black","Legend","legend","white","LabelText","label","Input","input","gallery","mobile","Select","select","Button","button","InformationApi","div","Form","calculateResult","rates","state","currency","setCurrency","sourceCurrency","setSourceCurrency","amount","setAmount","onSubmit","event","preventDefault","value","onChange","target","placeholder","type","required","step","Object","keys","map","TextBox","ResultText","span","SourceAmount","TargetAmount","Result","result","sourceAmount","toFixed","targetAmount","Container","main","alto","App","setResult","ratesData","setRatesData","setTimeout","fetch","then","response","ok","Error","statusText","json","catch","useApiRates","rate","sourceRate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e75424d3.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n    html {\n        box-sizing: border-box;\n        scroll-behavior: smooth;\n    }\n    *, ::after, ::before {\n         box-sizing: inherit;\n    }\n    .body {\n        max-width: 1000px;\n        margin: 0 auto;\n    }\n    #root {\n        font-family: 'Catamaran', sans-serif;\n        min-height: 100vh;\n   \n    }\n`;","import styled from \"styled-components\";\n\nexport const StyledHeader = styled.header`\n  display: block;\n`;\n\nexport const Title = styled.h1`\n  margin: 0 auto;\n  padding-top: 110px;\n  padding-bottom: 50px;\n  text-transform: uppercase;\n  text-align: center;\n  font-weight: 400;\n  letter-spacing: 1px;\n  @media (max-width: ${({ theme }) => theme.breakpoint.horizontal}px) {\n    padding-top: 20px;\n  }\n`;\n","import React from \"react\";\nimport { StyledHeader, Title } from \"./styled\";\n\nexport const Header = ({ title }) => (\n  <StyledHeader>\n    <Title>{title}</Title>\n  </StyledHeader>\n);\n","import styled from \"styled-components\";\n\nexport const StyledClock = styled.p`\n  font-size: 16px;\n  color: ${({ theme }) => theme.color.green};\n  font-weight: bold;\n  margin-bottom: 20px;\n  text-align: right;\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.horizontal}px) {\n    text-align: right;\n    font-size: 12px;\n  }\n`;\n","import { StyledClock } from \"./styled\";\nimport { useCurrentDate } from \"./useCurrentDate\";\n\nconst formatDate = (date) =>\n  date.toLocaleString(undefined, {\n    weekday: \"long\",\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n  });\n\nexport const Clock = () => {\n  const date = useCurrentDate();\n\n  return <StyledClock>\n    Dzisiaj jest {formatDate(date)}\n    </StyledClock>;\n};\n","import { useState, useEffect } from \"react\";\n\nexport const useCurrentDate = () => {\n  const [date, setDate] = useState(new Date());\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  return date;\n};\n","import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n  max-width: 500px;\n  margin: 0 auto;\n`;\n\nexport const Fieldset = styled.fieldset`\n  padding: 20px;\n  border: 1px solid ${({ theme }) => theme.color.black};\n  border-radius: 4px;\n  box-shadow: 3px 3px ${({ theme }) => theme.color.green};\n`;\n\nexport const Legend = styled.legend`\n  background-color: ${({ theme }) => theme.color.white};\n  color: ${({ theme }) => theme.color.green};\n  padding: 10px;\n  border: 1px solid ${({ theme }) => theme.color.green};\n  border-radius: 4px;\n  font-size: 14px;\n  font-weight: 600;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n`;\n\nexport const LabelText = styled.label`\n  width: 100%;\n  max-width: 600px;\n  display: block;\n  text-align: left;\n  font-size: 16px;\n  letter-spacing: 2px;\n  text-transform: uppercase;\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.horizontal}px) {\n    margin-top: 15px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  max-width: 250px;\n  padding: 10px;\n  margin-left: 20px;\n  border: 1px solid ${({ theme }) => theme.color.black};\n  border-radius: 4px;\n  font-size: 16px;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n  &:required {\n    background-color: ${({ theme }) => theme.color.gallery};\n  }\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobile}px) {\n    margin-left: 0px;\n  }\n`;\n\nexport const Select = styled.select`\n  width: 100%;\n  max-width: 250px;\n  padding: 10px;\n  margin-top: 10px;\n  margin-left: 16px;\n  border: 1px solid ${({ theme }) => theme.color.black};\n  border-radius: 4px;\n  font-size: 16px;\n  letter-spacing: 1px;\n  text-transform: uppercase;\n\n  @media (max-width: ${({ theme }) => theme.breakpoint.horizontal}px) {\n    margin-left: 0px;\n  }\n`;\n\nexport const Button = styled.button`\n  margin: 10px auto;\n  display: flex;\n  justify-content: center;\n  padding: 10px;\n  border: 1px solid ${({ theme }) => theme.color.green};\n  color: ${({ theme }) => theme.color.green};\n  border-radius: 4px;\n  background-color: ${({ theme }) => theme.color.white};\n  cursor: pointer;\n  font-size: 18px;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n`;\nexport const InformationApi = styled.div`\n  font-size: 20px;\n  font-style: italic;\n  line-height: 1.5;\n`;\n","import React, { useState } from \"react\";\nimport { Clock } from \"../Clock/Clock\";\nimport {\n  Fieldset,\n  Legend,\n  LabelText,\n  Input,\n  Select,\n  Button,\n  StyledForm,\n  InformationApi,\n} from \"./styled\";\n\nexport const Form = ({ calculateResult, rates, state, date }) => {\n  const [currency, setCurrency] = useState(\"PLN\");\n  const [sourceCurrency, setSourceCurrency] = useState(\"EUR\");\n  const [amount, setAmount] = useState(\"\");\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    calculateResult(currency, amount, sourceCurrency);\n  };\n\n  return (\n    <StyledForm onSubmit={onSubmit}>\n      <Fieldset>\n        {state === \"loading\" ? (\n          <InformationApi>\n            Poczekaj chwilkę, ładuję teraz dane z Europejskiego Banku\n            Centralnego 😄\n          </InformationApi>\n        ) : state === \"error\" ? (\n          <InformationApi>\n            ? Ojojoj...😟 wygląda na to, że wystapił błąd, chyba masz problem z\n            internetem, jeśli nie - spróbuj później\n          </InformationApi>\n        ) : (\n          <>\n            <Legend>Uzupełnij dane</Legend>\n            <Clock />\n            <LabelText>\n              Kwota *:\n              <Input\n                value={amount}\n                onChange={({ target }) => setAmount(target.value)}\n                placeholder=\"Podaj kwotę\"\n                type=\"number\"\n                required\n                step=\"0.01\"\n              />\n            </LabelText>\n            <LabelText>\n              Waluta z :\n              <Select\n                value={sourceCurrency}\n                onChange={({ target }) => setSourceCurrency(target.value)}\n              >\n                {Object.keys(rates).map((sourceCurrency) => (\n                  <option key={sourceCurrency} value={sourceCurrency}>\n                    {sourceCurrency}\n                  </option>\n                ))}\n              </Select>\n            </LabelText>\n            <LabelText>\n              Waluta na:\n              <Select\n                value={currency}\n                onChange={({ target }) => setCurrency(target.value)}\n              >\n                {Object.keys(rates).map((currency) => (\n                  <option key={currency} value={currency}>\n                    {currency}\n                  </option>\n                ))}\n              </Select>\n            </LabelText>\n            <Button>Przelicz</Button>\n          </>\n        )}\n        <p>Aktualizacja walut z dnia: {date}</p>\n      </Fieldset>\n    </StyledForm>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const TextBox = styled.div`\n  padding: 10px;\n  background-color: ${({ theme }) => theme.color.white};\n  border: 1px solid ${({ theme }) => theme.color.black};\n  border-radius: 4px;\n  box-shadow: 1px 1px ${({ theme }) => theme.color.black};\n  text-align: center;\n  max-width: 500px;\n  margin: 0 auto;\n`;\n\nexport const ResultText = styled.span`\n  display: block;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 500;\n  letter-spacing: 1px;\n`;\n\nexport const SourceAmount = styled.span`\n  color: ${({ theme }) => theme.color.green};\n  font-weight: 600;\n  font-size: 24px;\n  letter-spacing: 1px;\n`;\n\nexport const TargetAmount = styled.span`\n  color: ${({ theme }) => theme.color.green};\n  font-weight: 800;\n  font-size: 24px;\n  letter-spacing: 1px;\n`;\n","import React from \"react\";\nimport { TextBox, ResultText, SourceAmount, TargetAmount } from \"./styled\";\n\nexport const Result = ({ result }) =>\n  result !== undefined && (\n    <TextBox>\n      <ResultText>\n        <SourceAmount>\n          {result.sourceAmount.toFixed(2)}&nbsp;{result.sourceCurrency}&nbsp;\n        </SourceAmount>\n        to&nbsp;\n        <TargetAmount>\n          {result.targetAmount.toFixed(2)}&nbsp;{result.currency}\n        </TargetAmount>\n      </ResultText>\n    </TextBox>\n  );\n","import styled from \"styled-components\";\n\nexport const Container = styled.main`\n  background: ${({ theme }) => theme.color.alto};\n  height: 100vh;\n  margin: 0 auto;\n`;\n","import React, { useState } from \"react\";\nimport { Header } from \"./Header/Header\";\nimport { Form } from \"./Form/Form\";\nimport { Result } from \"./Result/Result\";\nimport { Container } from \"./Container\";\nimport { useApiRates } from \"./useRatesApi\";\nfunction App() {\n  const [result, setResult] = useState();\n\n  const ratesData = useApiRates();\n  const calculateResult = (currency, amount, sourceCurrency) => {\n    const rate = ratesData.rates[currency];\n    const sourceRate = ratesData.rates[sourceCurrency];\n\n    setResult({\n      sourceAmount: +amount,\n      targetAmount: (amount * rate) / sourceRate,\n      currency,\n      sourceCurrency,\n    });\n  };\n\n  return (\n    <>\n      <Container>\n        <Header title=\"Kalkulator Walut\" />\n        <Form\n          calculateResult={calculateResult}\n          rates={ratesData.rates}\n          state={ratesData.state}\n          date= {ratesData.date}\n        />\n        <Result result={result} />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\n\nexport const useApiRates = () => {\n  const [ratesData, setRatesData] = useState({\n    state: \"loading\",\n    date: null,\n    rates: null,\n  });\n\n  useEffect(() => {\n    const getApi = () => {\n      const addressAPI = \"https://api.exchangerate.host/latest\";\n\n      fetch(addressAPI)\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n          if (addressAPI !== \"https://api.exchangerate.host/latest\") {\n            throw new Error(response.statusText);\n          }\n          return response;\n        })\n        .then((response) => response.json())\n        .then(({ date, rates }) =>\n          setRatesData({\n            date,\n            rates,\n          })\n        )\n        .catch(() => setRatesData({ state: \"error\" }));\n    };\n    setTimeout(getApi, 1000);\n  }, []);\n  return ratesData;\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { ThemeProvider } from \"styled-components\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n    <GlobalStyle/>\n    <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\n    color: {\n        alto: \"#ddd\", \n        green: \"#339E33\",\n        white: \"#fff\",\n        black: \"#000\",\n        gallery:\"#eee\",\n    },\n    breakpoint:{\n      mobile: 767,\n      horizontal: 768,\n    },\n};\n"],"sourceRoot":""}